FROM phusion/baseimage:jammy-1.0.1
LABEL org.opencontainers.image.authors="gimatov@gmail.com"

ENV XDEBUG_PORT=${XDEBUG_PORT:-9001}
ENV COMPOSER_HOME=/var/www
ENV PHP_VERSION=8.4
ENV USER=${USER:-1000}
ENV GROUP=${GROUP:-1000}
ENV ADD_ROTATOR=${ADD_ROTATOR:-1}

# php-fpm have to be installed at the base image
# child image installation gets "memcached module required" error
# apt update & install in one command => https://stackoverflow.com/questions/54024620/do-ubuntu-php-repositories-expire/54024750
RUN apt-get -y update \
    && install_clean software-properties-common \
    && install_clean language-pack-en-base \
    && LC_ALL=C.UTF-8 add-apt-repository -y ppa:ondrej/php \
    && install_clean php${PHP_VERSION} php-pear php${PHP_VERSION}-dev php${PHP_VERSION}-cli php${PHP_VERSION}-fpm php${PHP_VERSION}-curl php${PHP_VERSION}-gd php${PHP_VERSION}-gmp php${PHP_VERSION}-amqp \
    && install_clean php${PHP_VERSION}-apcu php${PHP_VERSION}-mysqlnd php${PHP_VERSION}-sqlite3 php${PHP_VERSION}-memcached php${PHP_VERSION}-memcache php${PHP_VERSION}-xdebug \
    && install_clean php${PHP_VERSION}-imagick php${PHP_VERSION}-imap php${PHP_VERSION}-bcmath php${PHP_VERSION}-xml php${PHP_VERSION}-mbstring  php${PHP_VERSION}-zip php${PHP_VERSION}-intl \
    && install_clean sqlite3 unzip webp libwebp-dev libjpeg-dev libpng-dev libtiff-dev libgif-dev imagemagick libmagickcore-6.q16-6-extra \
    && install_clean mysql-client git php-json curl make \
    && install_clean php-pear && pear channel-update pear.php.net && pecl install xhprof \
    && update-alternatives --set php /usr/bin/php${PHP_VERSION} \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

# Redis
RUN curl -L -o phpredis.zip https://github.com/phpredis/phpredis/archive/develop.zip \
    && unzip -q phpredis.zip \
    && rm phpredis.zip \
    && cd phpredis-* \
    && phpize \
    && ./configure \
    && make && make install \
    && cd ../ \
    && rm -r phpredis-* \
    && cat > /etc/php/${PHP_VERSION}/mods-available/redis.ini \
    && echo 'extension=redis.so' > /etc/php/${PHP_VERSION}/mods-available/redis.ini \
    && phpenmod redis

# Node
RUN curl -sL https://deb.nodesource.com/setup_18.x | bash - \
    && install_clean nodejs \
    && corepack enable

# Composer
RUN curl -sL https://getcomposer.org/installer | php \
    && cp composer.phar /usr/local/bin/composer

# Rotator
COPY conf/xdebug.ini conf/rotator_8.tgz* /tmp
RUN if [ ${ADD_ROTATOR} && -f "/tmp/rotator_8.tgz" ]; then tar -zxf /tmp/rotator_8.tgz -C /tmp \
    && cd /tmp \
    && ls -la \
    && cd rotator_8 \
    && phpize \
    && ./configure \
    && make && make install \
    && cd ../ \
    && rm -r rotator_8 rotator_8.tgz \
    && cd ../ \
    && cat > /etc/php/${PHP_VERSION}/mods-available/rotator.ini \
    && echo "extension=rotator.so" > /etc/php/${PHP_VERSION}/mods-available/rotator.ini \
    && phpenmod rotator ; fi

RUN apt-get remove -y make \
	&& apt-get clean \
    && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

# Config files
COPY conf/php8-cli.ini /etc/php/${PHP_VERSION}/cli/php.ini
COPY conf/php8.ini /etc/php/${PHP_VERSION}/fpm/php.ini
COPY conf/php8.ini /etc/php/${PHP_VERSION}/php.ini
COPY conf/xdebug.ini \
	conf/xhproof.ini \
	conf/opcache.ini \
	conf/apcu.ini \
	conf/memcached.ini \
	/etc/php/${PHP_VERSION}/mods-available/

RUN phpenmod xhproof

RUN echo "Starting with UID : ${USER}, GID : ${GROUP}" \
	&& groupadd --gid ${GROUP} group \
	&& useradd --shell /bin/bash --uid ${USER} -G ${GROUP},docker_env -o -c "" -m user

# Use baseimage-docker's init system.
CMD ["/sbin/my_init"]
