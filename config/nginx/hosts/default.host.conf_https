server {
	listen 80;
	listen [::]:80;
	server_name [DOMAIN_NAME] www.[DOMAIN_NAME];
	location /.well-known/acme-challenge/ {
		root /var/www/certbot;
	}
	location / {
		return 301 https://[DOMAIN_NAME]$request_uri;
	}
}
server {
    listen 443 ssl;
    listen [::]:443 ssl;
    http2 on;
	server_name www.[DOMAIN_NAME];
	return 301 https://[DOMAIN_NAME]$request_uri;

	include ssl.conf*;
	ssl_certificate /etc/nginx/ssl/live/[DOMAIN_NAME]/fullchain.pem;
	ssl_certificate_key /etc/nginx/ssl/live/[DOMAIN_NAME]/privkey.pem;
}
server {
    listen 443 default_server ssl;
    listen [::]:443 ssl;
    http2 on;
	root /var/www/[DOMAIN_NAME]/public;
	index index.php index.html;
	server_name [DOMAIN_NAME];

	ssl_certificate /etc/nginx/ssl/live/[DOMAIN_NAME]/fullchain.pem;
	ssl_certificate_key /etc/nginx/ssl/live/[DOMAIN_NAME]/privkey.pem;

	error_page 404 /e404;
	client_max_body_size 300M;

	location / {
		# try to serve file directly, fallback to /index.php
		try_files $uri $uri/ /index.php$is_args$query_string;
	}
	location ~ \.php$ {
		try_files $uri =404;
		fastcgi_pass php_fpm;
		include fastcgi_params;
		fastcgi_index index.php;
		fastcgi_split_path_info ^(.+\.php)(/.*)$;
		fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
		fastcgi_param SCRIPT_NAME $fastcgi_script_name;
		fastcgi_param PATH_INFO $fastcgi_path_info;
		#fastcgi_param HTTPS off;
		#fastcgi_param HTTPS $fastcgi_https if_not_empty;
	}
	location ~ /\.ht {
		deny all;
	}
	location = /favicon.ico {
		try_files /favicon.ico =204;
	}
}

server {
	listen 8485 ssl;
	http2 on;
	server_name [DOMAIN_NAME];

	ssl_certificate /etc/nginx/ssl/live/[DOMAIN_NAME]/fullchain.pem;
	ssl_certificate_key /etc/nginx/ssl/live/[DOMAIN_NAME]/privkey.pem;

	location / {
		proxy_pass http://nodejs:8085;
		proxy_http_version 1.1;
	}
}

server {
	listen 8433 backlog=4096;
	http2 on;
	server_name [DOMAIN_NAME];

	ssl_certificate /etc/nginx/ssl/live/[DOMAIN_NAME]/fullchain.pem;
	ssl_certificate_key /etc/nginx/ssl/live/[DOMAIN_NAME]/privkey.pem;

	location / {
		proxy_pass http://nodejs:1333;
		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection "Upgrade";
		proxy_connect_timeout 36000;
		proxy_read_timeout 36000;
		proxy_send_timeout 36000;
		tcp_nodelay on;
	}
}
